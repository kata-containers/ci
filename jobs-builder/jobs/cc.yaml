# Copyright (c) 2022 Red Hat, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# This file contains the configurations to generate the pull request jobs
# for Confidential Containers project.
#
---
###
# Define shareable YAML snippets.
###
- cc_jobs_common_properties: &cc_jobs_common_properties
    name: 'common_job_properties'
    project-type: freestyle
    disabled: false
    concurrent: {concurrent_toggle}
    logrotate:
      daysToKeep: 30
      numToKeep: 30
    # Convert the os variable to label name.
    node: !include-jinja2: include/os2node.yaml.inc
    wrappers:
      - ansicolor:
          colormap: "xterm"
      - credentials-binding:
          - text:
              credential-id: quay_kata-containers-cc_auth_bot_creds
              variable: REGISTRY_CREDENTIAL_ENCODED
      - openstack:
          single-use: True
      - timestamps
      - timeout:
          timeout: 20
          type: no-activity
      - workspace-cleanup
- cc_jobs_common_publishers: &cc_jobs_common_publishers
    name: 'default_publishers'
    publishers:
      - post-tasks:
          - matches:
              - log-text: .*
                operator: OR
            script: |
              #!/bin/bash

              export GOPATH=$WORKSPACE/go
              export GOROOT="/usr/local/go"
              export PATH="${{GOPATH}}/bin:/usr/local/go/bin:/usr/sbin:/usr/local/bin:${{PATH}}"

              cd $GOPATH/src/github.com/kata-containers/tests
              .ci/teardown.sh "$WORKSPACE/artifacts"
      - archive:
          artifacts: "artifacts/*"
###
# Define jobs templates.
###
- job-template:
    # Use to generate pull request (PR) jobs.
    #
    # Arguments:
    #   repo        - the repository name.
    #   os          - the node Operating System in <name>-<version> format.
    #   arch        - the node architecture (e.g x86_64, s390x, ppc64le, and so on).
    #   ci_job      - the CI job type as defined in https://github.com/kata-containers/tests/blob/main/.ci/ci_job_flags.sh
    #
    name: "{repo}-CCv0-{os}-{arch}-{ci_job}-PR"
    <<: *cc_jobs_common_properties
    # Allow concurrent jobs by default. Specify `false` on the project definition otherwise.
    concurrent_toggle: true
    tee: ""
    description:
      !j2: |
         <pre>
         Pull Request (PR) job.
         OS="{{ os }}"
         arch="{{ arch }}"
         CI_JOB="{{ ci_job }}"
         repo="{{ repo }}"
         type="PR"
         </pre>
    scm:
      - git:
          url: https://github.com/kata-containers/{repo}
          branches:
            - '${{sha1}}'
          refspec: '+refs/pull/${{ghprbPullId}}/*:refs/remotes/origin/pr/${{ghprbPullId}}/*'
          wipe-workspace: false
    properties:
      - github:
          url: https://github.com/kata-containers/{repo}
    triggers:
      - github-pull-request:
          auth-id: 'katacontainers'
          github-hooks: true
          # Trigger only on commenting phrase in the pull request.
          only-trigger-phrase: true
          # The expected phrase will be like "/(re)test-<OS Name>"
          trigger-phrase:
            !j2: |
              {% if not tee -%}
              .*(\n|^|\s)/(re)?test(-{{ os.split("-")[0] }})?(\n|$|\s)+.*
              {%- else -%}
              .*(\n|^|\s)/(re)?test(-{{ os.split("-")[0] }})?(-{{ tee }})?(\n|$|\s)+.*
              {%- endif %}
          # Skip on commenting phrase.
          skip-build-phrase: '.*\[skip\W+ci\].*'
          cron: 'H/5 * * * *'
          # List of organizations whose members are allowed to build.
          org-list:
            - kata-containers
          # Members of allowed organizations will have admin rights.
          allow-whitelist-orgs-as-admins: true
          # Branches allowed to be tested.
          white-list-target-branches:
            - CCv0
          # Branches disallowed to be tested.
          black-list-target-branches:
            - main
            - master
            - stable-.*
          cancel-builds-on-update: true
          # Commit Status Context
          status-context:
            !j2: 'jenkins-ci-{{ os }}-{{ arch }}-{{ ci_job.lower() }}'
          # Commit Status Build Triggered
          triggered-status: Build triggered
          # Commit Status Build Started
          started-status: Build running
    builders:
      - shell:
          !include-jinja2: include/cc-ci_entrypoint.sh.inc
    <<: *cc_jobs_common_publishers

- job-template:
    # Use to generate pull request (PR) jobs for
    # confidential-containers/operator.
    #
    # Arguments:
    #   os                - the node Operating System in <name>-<version>
    #                       format.
    #   arch              - the node architecture (e.g x86_64, s390x, ppc64le,
    #                       and so on).
    #   container_runtime - the container runtime (e.g. containerd, crio)
    #   runtimeclass      - the runtimeclass as configured by the operator
    #                       (e.g. kata-qemu, kata-clh, kata-qemu-tdx).
    name: "confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-PR"
    <<: *cc_jobs_common_properties
    # Allow concurrent jobs by default. Specify `false` on the project definition otherwise.
    concurrent_toggle: true
    description:
      !j2: |
          <pre>
          Pull Request (PR) job for the confidential-containers/operator repository.
          OS="{{ os }}"
          arch="{{ arch }}"
          container runtime="{{ container_runtime }}"
          runtimeclass="{{ runtimeclass }}"
          type="PR"
          </pre>
    scm:
      - git:
          url: https://github.com/confidential-containers/operator
          branches:
            - '${{sha1}}'
          refspec: '+refs/pull/${{ghprbPullId}}/*:refs/remotes/origin/pr/${{ghprbPullId}}/*'
          wipe-workspace: false
    properties:
      - github:
          url: https://github.com/confidential-containers/operator
    triggers:
      - github-pull-request:
          auth-id: 'Confidential Containers external jobs'
          github-hooks: true
          # Trigger only on commenting phrase in the pull request.
          only-trigger-phrase: true
          # The expected phrase will be like "/(re)test-<OS Name>"
          trigger-phrase:
            !j2: '.*(\n|^|\s)/(re)?test(-{{ runtimeclass }})?(-{{ os.split("-")[0] }})?(\n|$|\s)+.*'
          # Skip on commenting phrase.
          skip-build-phrase: '.*\[skip\W+ci\].*'
          cron: 'H/5 * * * *'
          # List of organizations whose members are allowed to build.
          org-list:
            - confidential-containers
          # Members of allowed organizations will have admin rights.
          allow-whitelist-orgs-as-admins: true
          # Branches allowed to be tested.
          white-list-target-branches:
            - main
          # Branches disallowed to be tested.
          black-list-target-branches:
            - master
            - stable-.*
          cancel-builds-on-update: true
          # Commit Status Context
          status-context:
            !j2: 'tests-e2e-{{ os }}-{{ arch }}-{{ container_runtime }}_{{ runtimeclass }}'
          # Commit Status Build Triggered
          triggered-status: Build triggered
          # Commit Status Build Started
          started-status: Build running
    builders:
      - shell:
          !include-jinja2: include/operator-ci_entrypoint.sh.inc

- job-template:
    # Use to generate baseline jobs for Kata Containers.
    #
    # Arguments:
    #   os          - the node Operating System in <name>-<version> format.
    #   arch        - the node architecture (e.g x86_64, s390x, ppc64le, and so on).
    #   ci_job      - the CI job type as defined in https://github.com/kata-containers/tests/blob/main/.ci/ci_job_flags.sh
    #   maintainers - a list of maintainer (use the github's mentions @somebody).
    #
    name: "kata-containers-CCv0-{os}-{arch}-{ci_job}-baseline"
    <<: *cc_jobs_common_properties
    # Allow concurrent jobs by default. Specify `false` on the project definition otherwise.
    concurrent_toggle: true
    description:
      !j2: |
         <pre>
         Baseline job.
         /scheduled
         status="Stable"
         OS="{{ os }}"
         arch="{{ arch }}"
         branch="CCv0"
         CI_JOB="{{ ci_job }}"
         repo="kata-containers"
         type="baseline"
         Maintainers:
           {% for i in maintainers -%}
           - {{ i }}
           {% endfor %}
         </pre>
    scm:
      - git:
          url: https://github.com/kata-containers/kata-containers
          branches:
            - '*/CCv0'
          wipe-workspace: false
    triggers:
      - timed: 'H 0 * * *'
    builders:
      - shell:
          !include-jinja2: include/cc-ci_entrypoint.sh.inc
    <<: *cc_jobs_common_publishers

- job-template:
    # Use to generate baseline jobs for the operator.
    #
    # Arguments:
    #   os                - the node Operating System in <name>-<version> format.
    #   arch              - the node architecture (e.g x86_64, s390x, ppc64le, and so on).
    #   container_runtime - the container runtime (e.g. containerd, crio, and so on).
    #   runtimeclass      - the kata runtimeclass (e.g. kata-qemu, kata-clh, and so on).
    #   maintainers       - a list of maintainer (use the github's mentions @somebody).
    #
    name: "confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-baseline"
    <<: *cc_jobs_common_properties
    # Allow concurrent jobs by default. Specify `false` on the project definition otherwise.
    concurrent_toggle: true
    description:
      !j2: |
         <pre>
         Baseline job.
         /scheduled
         status="Stable"
         OS="{{ os }}"
         arch="{{ arch }}"
         branch="main"
         repo="confidential-containers/operator"
         type="baseline"
         Maintainers:
           {% for i in maintainers -%}
           - {{ i }}
           {% endfor %}
         </pre>
    scm:
      - git:
          url: https://github.com/confidential-containers/operator
          branches:
            - '*/main'
          wipe-workspace: false
    triggers:
      - timed: 'H 0 * * *'
    builders:
      - shell:
          !include-jinja2: include/operator-ci_entrypoint.sh.inc

###
# Define the projects
###
- project:
    name: "Generate jobs for Confidential Containers"
    repo:
      - kata-containers
      - tests
    os:
      - ubuntu-20.04
    arch:
      - x86_64
    baremetal: "false"
    ci_job:
      - CC_CRI_CONTAINERD
      - CC_CRI_CONTAINERD_CLOUD_HYPERVISOR
      - CC_CRI_CONTAINERD_K8S
    maintainers:
      - '@wainersm'
    jobs:
      - '{repo}-CCv0-{os}-{arch}-{ci_job}-PR'
      - 'kata-containers-CCv0-{os}-{arch}-{ci_job}-baseline'
- project:
    name: "Generate jobs for the Confidential Containers Operator"
    os:
      - ubuntu-20.04
    arch:
      - x86_64
    baremetal: "false"
    container_runtime:
      - containerd
    runtimeclass:
      - kata-qemu
      - kata-clh
    maintainers:
      - '@wainersm'
      - '@fidencio'
    jobs:
      - 'confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-PR'
      - 'confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-baseline'
- project:
    # The node label is selected based on this project name. Be careful if you
    # need to change the name.
    name: "Generate jobs for the Confidential Containers Operator on AMD SEV"
    os:
      - ubuntu-20.04_sev
    arch:
      - x86_64
    baremetal: "true"
    container_runtime:
      - containerd
    runtimeclass:
      - kata-qemu-sev
    maintainers:
      - '@ryansavino'
    jobs:
      - 'confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-PR'
      - 'confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-baseline'
- project:
    name: "Generate jobs for Confidential Containers on AMD SEV"
    repo:
      - kata-containers
      - tests
    os:
      - ubuntu-20.04_sev
    arch:
      - x86_64
    baremetal: "true"
    tee: "sev"
    ci_job:
      - CC_SEV_CRI_CONTAINERD_K8S
    maintainers:
      - '@ryansavino'
    jobs:
      - '{repo}-CCv0-{os}-{arch}-{ci_job}-PR'
      - 'kata-containers-CCv0-{os}-{arch}-{ci_job}-baseline'
- project:
    # The node label is selected based on this project name. Be careful if you
    # need to change the name.
    name: "Generate jobs for the Confidential Containers Operator on AMD SEV-SNP"
    os:
      - ubuntu-20.04_snp
    arch:
      - x86_64
    baremetal: "true"
    container_runtime:
      - containerd
    runtimeclass:
      - kata-qemu-snp
    maintainers:
      - '@UnmeshDeodhar'
    jobs:
      - 'confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-PR'
      - 'confidential-containers-operator-main-{os}-{arch}-{container_runtime}_{runtimeclass}-baseline'
- project:
    name: "Generate jobs for Confidential Containers on AMD SEV-SNP"
    repo:
      - kata-containers
      - tests
    os:
      - ubuntu-20.04_snp
    arch:
      - x86_64
    baremetal: "true"
    tee: "snp"
    ci_job:
      - CC_SNP_CRI_CONTAINERD_K8S
    maintainers:
      - '@UnmeshDeodhar'
    jobs:
      - '{repo}-CCv0-{os}-{arch}-{ci_job}-PR'
      - 'kata-containers-CCv0-{os}-{arch}-{ci_job}-baseline'

###
# Define stand-alone jobs.
###
- job:
    project-type: pipeline
    name: confidential-containers-ci
    concurrent: false
    description: |
      Confidential Containers CI job.
    dsl: !include-raw: include/cc-ci.groovy
    sandbox: true
    triggers:
      - pollscm:
          cron: "@hourly"
###
# Define views.
###
- view:
    name: Daily CCv0 baseline
    view-type: list
    regex: '.*\(operator-main\|CCv0\)-.*-baseline'
